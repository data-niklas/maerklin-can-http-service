# Usage:
# 1. Copy this file to config.py
# 2. Change the DEFAULT_ values
# 3. Enjoy and use the scripts / ASGI routers

import os
from pydantic import BaseSettings
from functools import lru_cache
from typing import List

FILE_DIR = os.path.dirname(os.path.realpath(__file__))

# Router configs
DEFAULT_ASGI_COMMAND = "uvicorn"

# DEFAULT_SCRIPT_COMMAND = os.path.join(os.path.dirname(FILE_DIR), "venv", "Scripts", "python.exe")     # For windows
DEFAULT_SCRIPT_COMMAND = os.path.join(os.path.dirname(FILE_DIR), "venv", "bin", "python")       # For unix

# IP from which packages are received and sent to
DEFAULT_RAW_CAN_IP = "192.168.1.3"
DEFAULT_RAW_CAN_PORT = 15731

# On which the raw_can_recv is hosted
DEFAULT_RAW_CAN_RECV_PORT = 8888
DEFAULT_RAW_CAN_RECV_HOST = "127.0.0.1"

# On which the raw_can_send is hosted
DEFAULT_RAW_CAN_SEND_PORT = 8000
DEFAULT_RAW_CAN_SEND_HOST = "127.0.0.1"

# On which the can_recv is hosted
DEFAULT_CAN_RECV_PORT = 8001
DEFAULT_CAN_RECV_HOST = "127.0.0.1"

# On which the can_send is hosted
DEFAULT_CAN_SEND_PORT = 8002
DEFAULT_CAN_SEND_HOST = "127.0.0.1"

DEFAULT_CAN_PORT = 8042
DEFAULT_CAN_HOST = "127.0.0.1"

DEFAULT_DATABASE_PORT = 8043
DEFAULT_DATABASE_HOST = "127.0.0.1"

# Timeout in millis
DEFAULT_CAN_TIMEOUT = 300

DEFAULT_HIGH_LEVEL_DB_DUMP_DATABASE = f'sqlite+aiosqlite:///{os.path.join(os.path.dirname(FILE_DIR), "out", "high_level_dump.sqlite3")}'
DEFAULT_RAW_DB_DUMP_DATABASE = f'sqlite+aiosqlite:///{os.path.join(os.path.dirname(FILE_DIR), "out", "raw_dump.sqlite3")}'

DEFAULT_WORKFLOW_TERMINAL_COMMAND = ["cmd.exe", "/c"]
DEFAULT_WORKFLOW_TERMINAL_INTERVAL = 1

DEFAULT_GRAFANA_PORT = 8044
DEFAULT_GRAFANA_DIR = os.path.join("/usr", "share", "grafana")
DEFAULT_GRAFANA_API_KEY = "REPLACE WITH YOUR OWN CREATED API KEY!"
DEFAULT_GRAFANA_UPDATE_INTERVAL = 300

# Scripts config
DEFAULT_WEBSOCKET_LOGGER_PORT = DEFAULT_CAN_RECV_PORT
DEFAULT_WEBSOCKET_LOGGER_HOST = DEFAULT_CAN_RECV_HOST

DEFAULT_WEBSOCKET_PRINTER_PORT = DEFAULT_CAN_RECV_PORT
DEFAULT_WEBSOCKET_PRINTER_HOST = DEFAULT_CAN_RECV_HOST

# Resample interval in seconds
DEFAULT_HIGH_LEVEL_DB_DUMP_RESAMPLE_INTERVAL = 30
DEFAULT_HIGH_LEVEL_DB_DUMP_REFRESH_INTERVAL = 10






class Settings(BaseSettings):
    asgi_command: str = DEFAULT_ASGI_COMMAND
    script_command: str = DEFAULT_SCRIPT_COMMAND

    raw_can_ip: str = DEFAULT_RAW_CAN_IP
    raw_can_port: int = DEFAULT_RAW_CAN_PORT

    raw_can_receiver_port: int = DEFAULT_RAW_CAN_RECV_PORT
    raw_can_sender_port: int = DEFAULT_RAW_CAN_SEND_PORT
    can_receiver_port: int = DEFAULT_CAN_RECV_PORT
    can_sender_port: int = DEFAULT_CAN_SEND_PORT
    can_port: int = DEFAULT_CAN_PORT
    database_port: int = DEFAULT_DATABASE_PORT

    raw_can_receiver_host: str = DEFAULT_RAW_CAN_RECV_HOST
    raw_can_sender_host: str = DEFAULT_RAW_CAN_SEND_HOST
    can_receiver_host: str = DEFAULT_CAN_RECV_HOST
    can_sender_host: str = DEFAULT_CAN_SEND_HOST
    can_host: str = DEFAULT_CAN_HOST
    database_host: str = DEFAULT_DATABASE_HOST

    can_timeout: int = DEFAULT_CAN_TIMEOUT

    high_level_db_dump_database: str = DEFAULT_HIGH_LEVEL_DB_DUMP_DATABASE
    raw_db_dump_database: str = DEFAULT_RAW_DB_DUMP_DATABASE
    

    websocket_printer_host: str = DEFAULT_WEBSOCKET_PRINTER_HOST
    websocket_printer_port: int = DEFAULT_WEBSOCKET_PRINTER_PORT

    websocket_logger_host: str = DEFAULT_WEBSOCKET_LOGGER_HOST
    websocket_logger_port: int = DEFAULT_WEBSOCKET_LOGGER_PORT

    workflow_terminal_command: List[str] = DEFAULT_WORKFLOW_TERMINAL_COMMAND
    workflow_terminal_interval: int = DEFAULT_WORKFLOW_TERMINAL_INTERVAL

    grafana_port: int = DEFAULT_GRAFANA_PORT
    grafana_dir: str = DEFAULT_GRAFANA_DIR
    grafana_api_key: str = DEFAULT_GRAFANA_API_KEY
    grafana_update_interval: int = DEFAULT_GRAFANA_UPDATE_INTERVAL

    high_level_db_dump_resample_interval: int = DEFAULT_HIGH_LEVEL_DB_DUMP_RESAMPLE_INTERVAL
    high_level_db_dump_refresh_interval: int = DEFAULT_HIGH_LEVEL_DB_DUMP_REFRESH_INTERVAL

    class Config():
        fields = {
            'asgi_command': {'env': 'asgi_command'},
            'script_command': {'env': 'script_command'},

            'raw_can_ip': {'env': 'raw_can_ip'},
            'raw_can_port': {'env': 'raw_can_port'},

            'raw_can_receiver_port': {'env': 'raw_can_recv_port'},
            'raw_can_sender_port': {'env': 'raw_can_sender_port'},
            'can_receiver_port': {'env': 'can_receiver_port'},
            'can_sender_port': {'env': 'can_sender_port'},
            'can_port': {'env': 'can_port'},
            'database_port': {'env': 'database_port'},

            'raw_can_receiver_host': {'env': 'raw_can_recv_host'},
            'raw_can_sender_host': {'env': 'raw_can_sender_host'},
            'can_receiver_host': {'env': 'can_receiver_host'},
            'can_sender_host': {'env': 'can_sender_host'},
            'can_host': {'env': 'can_host'},
            'database_host': {'env': 'database_host'},

            'can_timeout': {'env': 'can_timeout'},

            'websocket_printer_host': {'env': 'websocket_printer_host'},
            'websocket_printer_port': {'env': 'websocket_printer_port'},
            'websocket_logger_host': {'env': 'websocket_logger_host'},
            'websocket_logger_port': {'env': 'websocket_logger_port'},
            
            'high_level_db_dump_database': {'env': 'high_level_db_dump_database'},
            'raw_db_dump_database': {'env': 'raw_db_dump_database'},

            'workflow_terminal_command': {'env': 'workflow_terminal_command'},
            'workflow_terminal_interval': {'env': 'workflow_terminal_interval'},

            'grafana_port': {'env': 'grafana_port'},
            'grafana_dir': {'env': 'grafana_dir'},
            'grafana_api_key': {'env': 'grafana_api_key'},
            'grafana_update_interval': {'env': 'grafana_update_interval'},

            'high_level_db_dump_resample_interval': {'env': 'high_level_db_dump_resample_interval'},
            'high_level_db_dump_refresh_interval': {'env': 'high_level_db_dump_refresh_interval'}
        }


@lru_cache
def get_settings() -> Settings:
    return Settings()
